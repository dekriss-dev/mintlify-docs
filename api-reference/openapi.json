{
  "openapi": "3.1.0",
  "info": {
    "title": "Zgłoś Scammera API",
    "description": "Oficjalne API platformy Zgłoś Scammera - chroń innych przed oszustami w sieci",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://zglosscammera.pl/api"
    }
  ],
  "security": [],
  "paths": {
    "/scammers": {
      "get": {
        "description": "Pobiera listę wszystkich zweryfikowanych oszustów",
        "responses": {
          "200": {
            "description": "Lista oszustów",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Scammer"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Błąd serwera",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/servers": {
      "get": {
        "description": "Pobiera listę wszystkich zweryfikowanych serwerów oszukujących",
        "responses": {
          "200": {
            "description": "Lista serwerów oszukujących",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Server"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/legit": {
      "get": {
        "description": "Pobiera listę wszystkich zweryfikowanych zaufanych osób",
        "responses": {
          "200": {
            "description": "Lista zaufanych osób",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LegitUser"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/checkUser": {
      "post": {
        "description": "Sprawdza czy użytkownik znajduje się w bazie danych",
        "requestBody": {
          "description": "Dane użytkownika do sprawdzenia",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCheck"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Wynik sprawdzenia",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCheckResult"
                }
              }
            }
          }
        }
      }
    },
    "/checkUserOnList": {
      "post": {
        "description": "Sprawdza czy użytkownik znajduje się na określonej liście",
        "requestBody": {
          "description": "Dane użytkownika i lista do sprawdzenia",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserListCheck"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Wynik sprawdzenia na liście",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCheckResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Scammer": {
        "type": "object",
        "properties": {
          "reportId": {
            "type": "string",
            "description": "Unikalny ID zgłoszenia"
          },
          "name": {
            "type": "string",
            "description": "Nick oszusta"
          },
          "id": {
            "type": "string",
            "description": "Discord ID oszusta"
          },
          "desc": {
            "type": "string",
            "description": "Powód zgłoszenia"
          },
          "verified": {
            "type": "boolean",
            "description": "Czy zgłoszenie jest zweryfikowane"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data utworzenia zgłoszenia"
          }
        }
      },
      "Server": {
        "type": "object",
        "properties": {
          "reportId": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Nazwa serwera"
          },
          "id": {
            "type": "string",
            "description": "Discord ID serwera"
          },
          "desc": {
            "type": "string",
            "description": "Powód zgłoszenia"
          },
          "verified": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LegitUser": {
        "type": "object",
        "properties": {
          "reportId": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Nick zaufanej osoby"
          },
          "id": {
            "type": "string",
            "description": "Discord ID zaufanej osoby"
          },
          "desc": {
            "type": "string",
            "description": "Powód zaufania"
          },
          "verified": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserCheck": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Discord ID do sprawdzenia"
          },
          "name": {
            "type": "string",
            "description": "Nick do sprawdzenia"
          }
        }
      },
      "UserListCheck": {
        "type": "object",
        "required": ["id", "list"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Discord ID do sprawdzenia"
          },
          "name": {
            "type": "string",
            "description": "Nick do sprawdzenia"
          },
          "list": {
            "type": "string",
            "enum": ["scammers", "servers", "legit"],
            "description": "Lista do sprawdzenia"
          }
        }
      },
      "UserCheckResult": {
        "type": "object",
        "properties": {
          "found": {
            "type": "boolean",
            "description": "Czy użytkownik został znaleziony"
          },
          "type": {
            "type": "string",
            "enum": ["scammer", "legit", "server"],
            "description": "Typ znalezionego wpisu"
          },
          "data": {
            "type": "object",
            "description": "Dane znalezionego wpisu"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Opis błędu"
          },
          "reason": {
            "type": "string",
            "description": "Przyczyna błędu"
          }
        }
      }
    }
  }
}